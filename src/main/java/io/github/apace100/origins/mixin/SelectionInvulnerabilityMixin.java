package io.github.apace100.origins.mixin;

import io.github.apace100.origins.Origins;
import io.github.apace100.origins.component.OriginComponent;
import io.github.apace100.origins.registry.ModComponents;
import net.minecraft.entity.Entity;
import net.minecraft.entity.damage.DamageSource;
import net.minecraft.entity.player.PlayerEntity;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;

@Mixin(Entity.class)
public abstract class SelectionInvulnerabilityMixin {

    @Shadow public abstract boolean damage(DamageSource source, float amount);

    @Inject(at = @At("HEAD"), method = "isInvulnerableTo", cancellable = true)
    private void makeOriginInvulnerable(DamageSource damageSource, CallbackInfoReturnable<Boolean> cir) {

        if (damageSource.isOutOfWorld()) return;
        if (!((Entity) (Object) this instanceof PlayerEntity playerEntity)) return;

        if (Origins.PLAYERS_CHOOSING_ORIGIN.getOrDefault(playerEntity.getUuid(), false)) cir.setReturnValue(true);

    }

}
